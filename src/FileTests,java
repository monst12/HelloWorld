import java.util.*;
import java.io.*;
import java.nio.file.*;
import java.nio.file.attribute.*;

public class FileTests {


public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        
        System.out.println("Delete Path...");
        String input = sc.nextLine();
        Path path = Paths.get(input);
       
        System.out.println("Clearing path "+path);
        
                try{
                        deleteRecursively(path);
                   } catch(Exception exc){
                        exc.printStackTrace();
                   }
        
        System.out.println("Link Path source...");
        input = sc.nextLine();
        Path source = Paths.get(input);
        
        System.out.println("Link Path target..."); 
        input = sc.nextLine();
        Path target = Paths.get(input);
        
       System.out.println("Linking Path "+source+" to "+ target);
       
       Boolean cont = sc.nextBoolean();
       
       if(cont){
           try{
                linkRecursively(source, target);
              } catch(Exception exc){
                exc.printStackTrace();
              }
       }
}

private static void deleteRecursively(Path path) throws IOException{
        Files.walkFileTree(path, new SimpleFileVisitor<Path>(){
                @Override
                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException{
                        System.out.println("Visiting file "+file);
                        Files.delete(file);
                        return FileVisitResult.CONTINUE;
                }
                
                @Override 
                public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOException {
                        System.out.println("Post visiting directory "+dir);
                        Files.delete(dir);
                        return FileVisitResult.CONTINUE;
                }
        
        });

}

private static void linkRecursively(Path source, Path target) throws IOException{
        Files.createLink(source, target);
}

}
